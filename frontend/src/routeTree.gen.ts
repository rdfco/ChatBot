/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LandingImport } from './routes/_landing'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as LandingPrivacyImport } from './routes/_landing/privacy'
import { Route as LandingFaqImport } from './routes/_landing/faq'
import { Route as LandingBlogImport } from './routes/_landing/blog'
import { Route as LandingAboutImport } from './routes/_landing/about'
import { Route as AppUserImport } from './routes/_app/user'
import { Route as AppConnectionNewImport } from './routes/_app/connection/new'
import { Route as AppConnectionConnectionIdImport } from './routes/_app/connection/$connectionId'
import { Route as AppChatConversationIdImport } from './routes/_app/chat/$conversationId'

// Create/Update Routes

const LandingRoute = LandingImport.update({
  id: '/_landing',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LandingPrivacyRoute = LandingPrivacyImport.update({
  path: '/privacy',
  getParentRoute: () => LandingRoute,
} as any)

const LandingFaqRoute = LandingFaqImport.update({
  path: '/faq',
  getParentRoute: () => LandingRoute,
} as any)

const LandingBlogRoute = LandingBlogImport.update({
  path: '/blog',
  getParentRoute: () => LandingRoute,
} as any)

const LandingAboutRoute = LandingAboutImport.update({
  path: '/about',
  getParentRoute: () => LandingRoute,
} as any)

const AppUserRoute = AppUserImport.update({
  path: '/user',
  getParentRoute: () => AppRoute,
} as any)

const AppConnectionNewRoute = AppConnectionNewImport.update({
  path: '/connection/new',
  getParentRoute: () => AppRoute,
} as any)

const AppConnectionConnectionIdRoute = AppConnectionConnectionIdImport.update({
  path: '/connection/$connectionId',
  getParentRoute: () => AppRoute,
} as any)

const AppChatConversationIdRoute = AppChatConversationIdImport.update({
  path: '/chat/$conversationId',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingImport
      parentRoute: typeof rootRoute
    }
    '/_app/user': {
      id: '/_app/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof AppUserImport
      parentRoute: typeof AppImport
    }
    '/_landing/about': {
      id: '/_landing/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LandingAboutImport
      parentRoute: typeof LandingImport
    }
    '/_landing/blog': {
      id: '/_landing/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof LandingBlogImport
      parentRoute: typeof LandingImport
    }
    '/_landing/faq': {
      id: '/_landing/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof LandingFaqImport
      parentRoute: typeof LandingImport
    }
    '/_landing/privacy': {
      id: '/_landing/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof LandingPrivacyImport
      parentRoute: typeof LandingImport
    }
    '/_app/chat/$conversationId': {
      id: '/_app/chat/$conversationId'
      path: '/chat/$conversationId'
      fullPath: '/chat/$conversationId'
      preLoaderRoute: typeof AppChatConversationIdImport
      parentRoute: typeof AppImport
    }
    '/_app/connection/$connectionId': {
      id: '/_app/connection/$connectionId'
      path: '/connection/$connectionId'
      fullPath: '/connection/$connectionId'
      preLoaderRoute: typeof AppConnectionConnectionIdImport
      parentRoute: typeof AppImport
    }
    '/_app/connection/new': {
      id: '/_app/connection/new'
      path: '/connection/new'
      fullPath: '/connection/new'
      preLoaderRoute: typeof AppConnectionNewImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AppRoute: AppRoute.addChildren({
    AppUserRoute,
    AppChatConversationIdRoute,
    AppConnectionConnectionIdRoute,
    AppConnectionNewRoute,
  }),
  LandingRoute: LandingRoute.addChildren({
    LandingAboutRoute,
    LandingBlogRoute,
    LandingFaqRoute,
    LandingPrivacyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_landing"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/user",
        "/_app/chat/$conversationId",
        "/_app/connection/$connectionId",
        "/_app/connection/new"
      ]
    },
    "/_landing": {
      "filePath": "_landing.tsx",
      "children": [
        "/_landing/about",
        "/_landing/blog",
        "/_landing/faq",
        "/_landing/privacy"
      ]
    },
    "/_app/user": {
      "filePath": "_app/user.tsx",
      "parent": "/_app"
    },
    "/_landing/about": {
      "filePath": "_landing/about.tsx",
      "parent": "/_landing"
    },
    "/_landing/blog": {
      "filePath": "_landing/blog.tsx",
      "parent": "/_landing"
    },
    "/_landing/faq": {
      "filePath": "_landing/faq.tsx",
      "parent": "/_landing"
    },
    "/_landing/privacy": {
      "filePath": "_landing/privacy.tsx",
      "parent": "/_landing"
    },
    "/_app/chat/$conversationId": {
      "filePath": "_app/chat/$conversationId.tsx",
      "parent": "/_app"
    },
    "/_app/connection/$connectionId": {
      "filePath": "_app/connection/$connectionId.tsx",
      "parent": "/_app"
    },
    "/_app/connection/new": {
      "filePath": "_app/connection/new.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
